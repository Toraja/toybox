#!/bin/bash

br_red="\e[91m"
br_yellow="\e[93m"
br_blue="\e[94m"
normal="\e[0m"

# get commit number of specified one, 2nd last commit by default
# -l: only display recent one line logs up to 30
# -f: display file name as well
while getopts :hl OPT; do
	case ${OPT} in
		h)
			echo -e "${br_blue}get specified commit number, 2nd last commit by default.${normal}"
			echo -e "${br_blue}option:${normal}"
			echo -e "${br_blue}\tl: only display recent logs.${normal}"
			exit 0
			;;
		l)
			listonly=1
			;;
		\?)
			echo -e "${br_yellow}unknown option ${OPTARG}${normal}"
			exit 2
			;;
		:)
			echo -e "${br_yellow}option ${OPTARG} requires an argument${normal}"
			exit 2
			;;
		*)
			exit 9
	esac
done
shift $((OPTIND-1))
unset OPTIND

# Check if in git reporsitory, and exit if not
git status >/dev/null
InGitRepo=$?
if [[ ${InGitRepo} -ne 0 ]]; then
	exit ${InGitRepo}
fi

# Set default number of commit history
if [[ ${listonly} -eq 1 ]]; then
	histnum=${1:-10}
else
	histnum=${1:-2}
fi
# Validate argument
if [[ ${histnum} -gt 30 ]]; then
	echo -e "${br_red}Argument must be digits less than or equal to 30${normal}"
	exit 1
fi

# Main part
if [[ ${listonly} -eq 1 ]]; then
	# List recent one line logs
	git log -${histnum} --oneline --color=always | cat -n
else
	# Get the specified hash
	git log -${histnum} --oneline | sed -n ${histnum}p | cut --delimiter " " --fields 1
fi

