snippet     rt
abbr        return
options     word
    return 

snippet     vec
abbr        vector
options     word
    vec![${0}]

snippet     fn
abbr        fn (args) {}
options     word
    fn ${1:#:func_name}(${2:#:args}) ${3:#:->  }{
        ${0:TARGET}
    }

snippet     me
abbr        fn (self, args) {}
options     word
    fn ${1:#:func_name}(${2:#:&}self${3:#:, args}) ${4:#:->  }{
        ${0:TARGET}
    }

snippet     matres
abbr        match Result
options     word
    match ${1} {
        Ok(${2}) => ${3},
        Err(e) => ${4},
    }

snippet     matopt
abbr        match Option
options     word
    match ${1} {
        Some(${2}) => ${3},
        None => ${4},
    }

snippet     letmat
abbr        let match
options     head
    let ${1} = match ${2} {
        ${3} => ${4}
    };

snippet     letmatres
abbr        let match Result
options     head
    let ${1} = match ${2} {
        Ok(${3}) => ${4},
        Err(e) => ${5},
    };

snippet     ifl
abbr        if let
options     head
    if let ${1:#:Some()} = ${2} {
        ${0:TARGET}
    }

snippet     pmod
abbr        pub mod
options     head
    pub mod ${1:#:mod_name} {
        ${0:TARGET}
    }

snippet     sf
abbr        String::from()
options     word
    String::from("${0}")

snippet     from
abbr        impl From trait
options     head
    impl From<${1}> for ${2} {
        fn from(${3}: $1) -> Self {
            ${0}
        }
    }

snippet     ttest
abbr        tokio test
options     head
	#[tokio::test]
	async fn ${1:test_function_name}() {
		${0}
	}
